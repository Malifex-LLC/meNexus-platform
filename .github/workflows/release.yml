name: Release meNexus containers
on:
  push:
    tags: ['v*']

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Derive version/channel
        id: ver
        run: |
          TAG="${GITHUB_REF_NAME}"
          VERSION="${TAG#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [[ "$VERSION" == *"-alpha."* ]]; then CH=alpha
          elif [[ "$VERSION" == *"-beta."* ]]; then CH=beta
          elif [[ "$VERSION" == *"-rc."* ]]; then CH=rc
          else CH=stable; fi
          echo "channel=$CH" >> $GITHUB_OUTPUT
          echo "minor=$(cut -d. -f1,2 <<<"$VERSION")" >> $GITHUB_OUTPUT

      - name: Compute build date & owner
        id: meta
        shell: bash
        run: |
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Synapse
      - name: Build & push synapse
        uses: docker/build-push-action@v6
        with:
          context: .
          file: services/synapse/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            VERSION=${{ steps.ver.outputs.version }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.meta.outputs.date }}
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-synapse:${{ steps.ver.outputs.version }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-synapse:${{ steps.ver.outputs.minor }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-synapse:${{ steps.ver.outputs.channel }}

      # Client (release build hits proxy: /api + /ws, adjust if you truly want "")
      - name: Build & push client
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/client-web/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            VERSION=${{ steps.ver.outputs.version }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.meta.outputs.date }}
            VITE_API_BASE_URL=""
            VITE_WS_BASE_URL=/ws
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-client:${{ steps.ver.outputs.version }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-client:${{ steps.ver.outputs.minor }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-client:${{ steps.ver.outputs.channel }}

      # Proxy
      - name: Build & push proxy
        uses: docker/build-push-action@v6
        with:
          context: services/proxy
          file: services/proxy/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            VERSION=${{ steps.ver.outputs.version }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.meta.outputs.date }}
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-proxy:${{ steps.ver.outputs.version }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-proxy:${{ steps.ver.outputs.minor }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/menexus-proxy:${{ steps.ver.outputs.channel }}

      - name: Tag "latest" (stable only)
        if: ${{ steps.ver.outputs.channel == 'stable' }}
        run: |
          for img in menexus-synapse menexus-client menexus-proxy; do
            docker buildx imagetools create \
              -t ghcr.io/${{ steps.meta.outputs.owner_lc }}/$img:latest \
              ghcr.io/${{ steps.meta.outputs.owner_lc }}/$img:${{ steps.ver.outputs.version }}
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          name: v${{ steps.ver.outputs.version }}
          prerelease: ${{ steps.ver.outputs.channel != 'stable' }}
          generate_release_notes: true
